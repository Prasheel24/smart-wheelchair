<?xml version="1.0" encoding="utf-8"?>

<launch>
  <arg name="yaml_file" default="$(find wheelchair)/Map/room_full_and_final.yaml"/>
  <!-- <arg name="gazebo_world_file" default="$(find wheelchair)/world/hospital_new.world"/> -->
  <arg name="rviz_config" default="$(find wheelchair)/config/navigation.rviz"/>
  <arg name="amcl_launch_xml" default="$(find wheelchair)/data/includes/amcl.launch.xml"/>
  <arg name="move_base_launch_xml" default="$(find wheelchair)/data/includes/move_base.launch.xml"/>


   <node name="map_server" pkg="map_server" type="map_server" args="$(arg yaml_file)"/>

<!--     <include file="$(find gazebo_ros)/launch/willowgarage_world.launch">
    </include> -->
<!-- 
  <arg name="gui" default="true"/>
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="use_sim_time" value="true"/>
    <arg name="debug" value="false"/>
    <arg name="gui" value="$(arg gui)" />
    <arg name="world_name" value="$(arg gazebo_world_file)"/>
  </include> -->

   <arg name="init_pose" value="-x 0 -y 0 -z 0 -R 0 -P 0 -Y 1.57"/>
    <param name="robot_description" textfile="$(find wheelchair)/urdf/wheelchair.urdf" />
    <node name="spawn_model" pkg="gazebo_ros" type="spawn_model" args="-unpause -urdf -param robot_description -model wheelchair"/>

<node name="fake_joint_calibration" pkg="rostopic" type="rostopic" args="pub /calibrated std_msgs/Bool true" />
       
       <node pkg="tf" type="static_transform_publisher" name="map_odom_broadcaster"
      args="0.25 0.25 0 -1.57 0 0 /map /odom 40"/>
      <!-- <node pkg ="tf" type="static_transform_publisher" name="odom_to_base_link" args="0.0 0.0 0.0 0.0 0.0 0.0 /odom /base_link 40"/> -->

<node pkg="tf" type="static_transform_publisher" name="base_link_to_base_laser" args="0.75 -0.0 0.3 0.0 0.0 0.0 /base_link /base_laser 40" />
<!--     <node pkg="tf" type="static_transform_publisher" name="base_laser_to_laser_frame" args="0.0 0.0 0.0 0.0 0.0 0.0 /base_laser /laser_frame 40" /> -->


<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
<node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
  <param name="publish_frequency" type="double" value="30.0" />
</node>

<node name="rviz" pkg="rviz" type="rviz" output="screen" args="-d $(arg rviz_config)"/>

<include file="$(arg amcl_launch_xml)"/>

<node pkg="rf2o_laser_odometry" type="rf2o_laser_odometry_node" name="rf2o_laser_odometry" output="screen">
    <param name="laser_scan_topic" value="scan"/>        # topic where the lidar scans are being published
    <param name="odom_topic" value="odom" />              # topic where tu publish the odometry estimations
    <param name="publish_tf" value="true" />                   # wheter or not to publish the tf::transform (base->odom)
    <param name="base_frame_id" value="/base_link"/>            # frame_id (tf) of the mobile robot base. A tf transform from 
    <param name="odom_frame_id" value="/odom" />                # frame_id (tf) to publish the odometry estimations    
    <param name="init_pose_from_topic" value=""/> # (Odom topic) Leave empty to start at point (0,0)
    <param name="freq" value="6.0"/>                            # Execution frequency.
    <param name="verbose" value="false" />                       # verbose
</node>

  <!-- <include file="$(arg move_base_launch_xml)"/> -->
<node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find wheelchair)/data/param/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find wheelchair)/data/param/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find wheelchair)/data/param/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find wheelchair)/data/param/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find wheelchair)/data/param/base_local_planner_params.yaml" command="load" />

    <remap from="cmd_vel" to="wheelchair/mobile_base_controller/cmd_vel"/>
    <remap from="odom" to="odom"/>
    <param name="base_global_planner" type="string" value="rrt_plugin/RRTPlanner" />
    <param name="base_local_planner" value="base_local_planner/TrajectoryPlannerROS"/>
    <param name="clearing_rotation_allowed" value="true"/>

</node>

<!-- <include file="$(find amcl)/examples/amcl_diff.launch" /> -->


    <rosparam file="$(find wheelchair)/config/wheelchair_control.yaml" command="load"/>
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/wheelchair" args="mobile_base_controller"/>
</launch>
